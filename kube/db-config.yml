apiVersion: v1
kind: ConfigMap
metadata:
  name: derp-init-sql
  namespace: derp
data:
  # property-like keys; each key maps to a simple value
  derp-db-init: |
    -- Initialization script for the dadabase

    CREATE SEQUENCE public."CustomRequests_Id_seq"
      INCREMENT BY 1
      MINVALUE 1
      MAXVALUE 2147483647
      START 1
      CACHE 1
      NO CYCLE;
    -- DROP SEQUENCE public."Images_Id_seq";

    CREATE SEQUENCE public."Images_Id_seq"
      INCREMENT BY 1
      MINVALUE 1
      MAXVALUE 2147483647
      START 1
      CACHE 1
      NO CYCLE;

    CREATE SEQUENCE public."Orders_Id_seq"
      INCREMENT BY 1
      MINVALUE 1
      MAXVALUE 2147483647
      START 1
      CACHE 1
      NO CYCLE;

    CREATE SEQUENCE public."Portfolios_Id_seq"
      INCREMENT BY 1
      MINVALUE 1
      MAXVALUE 2147483647
      START 1
      CACHE 1
      NO CYCLE;

    CREATE SEQUENCE public."ProductTypes_Id_seq"
      INCREMENT BY 1
      MINVALUE 1
      MAXVALUE 2147483647
      START 1
      CACHE 1
      NO CYCLE;

    CREATE SEQUENCE public."Products_Id_seq"
      INCREMENT BY 1
      MINVALUE 1
      MAXVALUE 2147483647
      START 1
      CACHE 1
      NO CYCLE;

    CREATE SEQUENCE public."Users_Id_seq"
      INCREMENT BY 1
      MINVALUE 1
      MAXVALUE 2147483647
      START 1
      CACHE 1
      NO CYCLE;

    CREATE TABLE public."Images" (
      "Id" int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
      "Alt" text NOT NULL,
      "Path" text NOT NULL,
      CONSTRAINT "PK_Images" PRIMARY KEY ("Id")
    );

    CREATE TABLE public."ProductTypes" (
      "Id" int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
      "Name" text NOT NULL,
      CONSTRAINT "PK_ProductTypes" PRIMARY KEY ("Id")
    );

    CREATE TABLE public."Users" (
      "Id" int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
      "Name" text NOT NULL,
      "OAuth" text NOT NULL,
      "Email" text NOT NULL,
      "Role" text NOT NULL,
      "Active" bool NOT NULL,
      CONSTRAINT "PK_Users" PRIMARY KEY ("Id")
    );

    CREATE TABLE public."__EFMigrationsHistory" (
      "MigrationId" varchar(150) NOT NULL,
      "ProductVersion" varchar(32) NOT NULL,
      CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
    );

    CREATE TABLE public."CustomRequests" (
      "Id" int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
      "Description" text NOT NULL,
      "Email" text NOT NULL,
      "Status" text NOT NULL,
      "ProductTypeId" int4 NOT NULL,
      "UserId" int4 NOT NULL,
      CONSTRAINT "PK_CustomRequests" PRIMARY KEY ("Id"),
      CONSTRAINT "FK_CustomRequests_ProductTypes_ProductTypeId" FOREIGN KEY ("ProductTypeId") REFERENCES public."ProductTypes"("Id") ON DELETE RESTRICT,
      CONSTRAINT "FK_CustomRequests_Users_UserId" FOREIGN KEY ("UserId") REFERENCES public."Users"("Id") ON DELETE CASCADE
    );
    CREATE INDEX "IX_CustomRequests_ProductTypeId" ON public."CustomRequests" USING btree ("ProductTypeId");
    CREATE INDEX "IX_CustomRequests_UserId" ON public."CustomRequests" USING btree ("UserId");

    CREATE TABLE public."Orders" (
      "Id" int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
      "Address" text NOT NULL,
      "Email" text NOT NULL,
      "OrderDate" timestamptz NOT NULL,
      "UserId" int4 NOT NULL,
      CONSTRAINT "PK_Orders" PRIMARY KEY ("Id"),
      CONSTRAINT "FK_Orders_Users_UserId" FOREIGN KEY ("UserId") REFERENCES public."Users"("Id") ON DELETE CASCADE
    );
    CREATE INDEX "IX_Orders_UserId" ON public."Orders" USING btree ("UserId");

    CREATE TABLE public."Portfolios" (
      "Id" int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
      "Description" text NOT NULL,
      "Name" text NOT NULL,
      "ProductTypeId" int4 NOT NULL,
      CONSTRAINT "PK_Portfolios" PRIMARY KEY ("Id"),
      CONSTRAINT "FK_Portfolios_ProductTypes_ProductTypeId" FOREIGN KEY ("ProductTypeId") REFERENCES public."ProductTypes"("Id") ON DELETE RESTRICT
    );
    CREATE INDEX "IX_Portfolios_ProductTypeId" ON public."Portfolios" USING btree ("ProductTypeId");

    CREATE TABLE public."Products" (
      "Id" int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
      "Name" text NOT NULL,
      "Price" numeric NOT NULL,
      "Quantity" int4 NOT NULL,
      "Description" text NOT NULL,
      "ProductTypeId" int4 NOT NULL,
      CONSTRAINT "PK_Products" PRIMARY KEY ("Id"),
      CONSTRAINT "FK_Products_ProductTypes_ProductTypeId" FOREIGN KEY ("ProductTypeId") REFERENCES public."ProductTypes"("Id") ON DELETE RESTRICT
    );
    CREATE INDEX "IX_Products_ProductTypeId" ON public."Products" USING btree ("ProductTypeId");

    CREATE TABLE public."OrderProduct" (
      "OrderId" int4 NOT NULL,
      "ProductId" int4 NOT NULL,
      CONSTRAINT "PK_OrderProduct" PRIMARY KEY ("OrderId", "ProductId"),
      CONSTRAINT "FK_OrderProduct_Orders_OrderId" FOREIGN KEY ("OrderId") REFERENCES public."Orders"("Id") ON DELETE CASCADE,
      CONSTRAINT "FK_OrderProduct_Products_ProductId" FOREIGN KEY ("ProductId") REFERENCES public."Products"("Id") ON DELETE CASCADE
    );
    CREATE INDEX "IX_OrderProduct_ProductId" ON public."OrderProduct" USING btree ("ProductId");

    CREATE TABLE public."PortfolioImage" (
      "ImageId" int4 NOT NULL,
      "PortfolioId" int4 NOT NULL,
      CONSTRAINT "PK_PortfolioImage" PRIMARY KEY ("ImageId", "PortfolioId"),
      CONSTRAINT "FK_PortfolioImage_Images_ImageId" FOREIGN KEY ("ImageId") REFERENCES public."Images"("Id") ON DELETE CASCADE,
      CONSTRAINT "FK_PortfolioImage_Portfolios_PortfolioId" FOREIGN KEY ("PortfolioId") REFERENCES public."Portfolios"("Id") ON DELETE CASCADE
    );
    CREATE INDEX "IX_PortfolioImage_PortfolioId" ON public."PortfolioImage" USING btree ("PortfolioId");

    CREATE TABLE public."ProductImage" (
      "ImageId" int4 NOT NULL,
      "ProductId" int4 NOT NULL,
      CONSTRAINT "PK_ProductImage" PRIMARY KEY ("ImageId", "ProductId"),
      CONSTRAINT "FK_ProductImage_Images_ImageId" FOREIGN KEY ("ImageId") REFERENCES public."Images"("Id") ON DELETE CASCADE,
      CONSTRAINT "FK_ProductImage_Products_ProductId" FOREIGN KEY ("ProductId") REFERENCES public."Products"("Id") ON DELETE CASCADE
    );
    CREATE INDEX "IX_ProductImage_ProductId" ON public."ProductImage" USING btree ("ProductId");

    CREATE OR REPLACE FUNCTION public.azure_roles_authtype()
    RETURNS TABLE(rolename character, authtype text)
    LANGUAGE c
    STRICT
    AS '$libdir/azure', $function$azure_get_roles$function$
    ;

    CREATE OR REPLACE FUNCTION public.pg_azure_cause_crash()
    RETURNS void
    LANGUAGE c
    STRICT
    AS '$libdir/azure', $function$pg_azure_cause_crash$function$
    ;

    CREATE OR REPLACE FUNCTION public.pg_last_removed_wal_lsn()
    RETURNS pg_lsn
    LANGUAGE c
    AS '$libdir/azure', $function$pg_last_removed_wal_lsn$function$
    ;

    CREATE OR REPLACE FUNCTION public.pg_last_wal_replay_tli_lsn()
    RETURNS TABLE(tli integer, lsn pg_lsn)
    LANGUAGE c
    STRICT
    AS '$libdir/azure', $function$pg_last_wal_replay_tli_lsn$function$
    ;

    CREATE OR REPLACE FUNCTION public.pg_postmaster_memory()
    RETURNS TABLE(private_writable_kb bigint, shared_writable_kb bigint, pid bigint)
    LANGUAGE c
    STRICT
    AS '$libdir/azure', $function$pg_postmaster_memory$function$
    ;
      